apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "io.coreflodev.exampleapplication"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "io.coreflodev.exampleapplication.core.TestRunner"

        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').canRead()) {
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
        }

        if (properties.getProperty('marvel.privateKey', '').empty || properties.getProperty('marvel.apiKey','').empty) {
            System.err.println("Please set marvel.privateKey and marvel.apiKey on your local.properties")
        }

        buildConfigField 'String', 'MARVEL_PRIVATE_KEY', properties.getProperty('marvel.privateKey', '')
        buildConfigField 'String', 'MARVEL_API_KEY', properties.getProperty('marvel.apiKey', '')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation('com.squareup.moshi:moshi-kotlin:1.9.2') {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.2'

    implementation 'com.google.dagger:dagger:2.28'
    kapt 'com.google.dagger:dagger-compiler:2.28'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.1.0'

    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    testImplementation 'junit:junit:4.13'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'com.squareup.rx.idler:rx2-idler:0.9.1'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.12.0'

}
